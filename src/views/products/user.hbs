<div class="container p-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <div class="panel-heading text-center">
                        <h3>
                            <div class="panel-title">Actualizar Perfil</div>
                        </h3>
                    </div>
                </div>
                <div class="card-body">
                    <form action="/products/user/" class="row g-3 needs-validation" method="POST"
                        enctype="multipart/form-data">

                        <div class="col-md-6">
                            <label class="form-label">Nombre:</label>
                            <input type="text" value="{{profile.PERSONA_NOMBRE}}" name="PERSONA_NOMBRE"
                                placeholder="NOMBRE" class="form-control" maxlength="60"
                                style="text-transform:uppercase"
                                oninput="if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"
                                required autofocus>
                            <font size=2 class="text-danger">Mínimo 10 caracteres</font>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Teléfono:</label>
                            <input type="number" value="{{profile.PERSONA_TELEFONO}}" name="PERSONA_TELEFONO"
                                placeholder="TELÉFONO" class="form-control"
                                onkeypress="return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0 "
                                maxlength="10"
                                oninput="if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"
                                required>
                            <font size=2 class="text-danger">Mínimo 8 números</font>
                        </div>

                        <div class="col-md-4">
                            <label class="form-label">Provincia:</label>
                            <div class="form-label">
                                <select id="provincia" class="form-select" aria-label="Default select example" required>
                                    <option value="0" selected>SELECCIONE</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Cantón:</label>
                            <div class="form-label">
                                <select id="canton" class="form-select" aria-label="Default select example" required>
                                    <option value="0" selected>SELECCIONE</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Parroquia:</label>
                            <div class="form-label">
                                <select id="parroquia" name="DIRECCION_ID" class="form-select"
                                    aria-label="Default select example" required>
                                    <option value="0" selected>SELECCIONE</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="form-label">Contraseña Antigua:</label>
                            <input type="password" name="CONTRASENA_ANTIGUA" placeholder="CONTRASEÑA"
                                class="form-control" maxlength="60"
                                oninput="if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);">
                            <font size=2 class="text-danger">Mínimo 5 caracteres</font>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Contraseña Nueva:</label>
                            <input type="password" name="CONTRASENA_NUEVA" placeholder="CONTRASEÑA" class="form-control"
                                maxlength="60"
                                oninput="if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);">
                            <font size=2 class="text-danger">Mínimo 5 caracteres</font>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Repetir Contraseña Nuevamente:</label>
                            <input type="password" name="REPETIR_CONTRASENA" placeholder="CONTRASEÑA"
                                class="form-control" maxlength="60"
                                oninput="if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);">
                            <font size=2 class="text-danger">Mínimo 5 caracteres</font>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Imagen Antigua:</label>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Imagen Actual:</label>
                        </div>

                        <div class="col-md-6">
                            <img id="previewProfile{{@index}}" src="" class="img-thumbnail" width="300px">
                            <input type="hidden" id="responseProfile{{@index}}" class="form-control"
                                value="{{profile.PERSONA_IMAGEN}}">
                        </div>

                        <div class="col-md-6">
                            <input type="file" accept="image/*" name="SUBIR_IMAGEN" class="form-control"
                                onchange="loadFile(event)">
                            <font size=2 class="text-danger">Solo subir imagenes</font>
                            <p></p>
                            <img id="output" class="img-thumbnail" width="300px" />
                        </div>

                        <div class="col-12 text-center">
                            <button class="btn btn-success">
                                Guardar
                            </button>
                            <a href="/products" class="btn btn-danger">Cancelar</a>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var loadFile = function (event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('output');
            output.src = reader.result;
        };
        reader.readAsDataURL(event.target.files[0]);
    };
</script>

<script>

    fetch('/direction')
        .then(res => res.json())
        .then(data => {

            let provincias = [];

            var cantones = [
                {
                    provincia: '',
                    canton: ''
                }
            ];

            var parroquias = [
                {
                    id: '',
                    canton: '',
                    parroquia: ''
                }
            ];

            const direction = '';

            data.direction.forEach(places => {
                provincias.push(places.PROVINCIA);
                cantones.push({ provincia: places.PROVINCIA, canton: places.CANTON });
                parroquias.push({ id: places.DIRECCION_ID, canton: places.CANTON, parroquia: places.PARROQUIA });
            });

            let unicosProvincias = Array.from(new Set(provincias));

            let hash = {};
            cantones = cantones.filter(o => hash[o.canton] ? false : hash[o.canton] = true);

            var areasSelect = document.getElementById('provincia');
            var categoriasSelect = document.getElementById('canton');
            var subCategoriasSelect = document.getElementById('parroquia');

            areasSelect.addEventListener("change", cargarCategorias);
            categoriasSelect.addEventListener("change", cargarSubCategorias);

            unicosProvincias.forEach(function (unicosProvincia) {
                let opcion = document.createElement('option')
                opcion.value = unicosProvincia
                opcion.text = unicosProvincia
                areasSelect.add(opcion)
            })

            function cargarCategorias() {
                categoriasSelect.options.length = 1;
                subCategoriasSelect.options.length = 1;
                cantones
                    .filter(function (canton) {
                        return canton.provincia == this;
                    }, areasSelect.value)
                    .forEach(function (canton) {
                        let opcion = document.createElement('option')
                        opcion.value = canton.canton
                        opcion.text = canton.canton
                        categoriasSelect.add(opcion);
                    });
            }

            function cargarSubCategorias() {
                subCategoriasSelect.options.length = 1;
                parroquias
                    .filter(function (parroquia) {
                        return parroquia.canton == this;
                    }, categoriasSelect.value)
                    .forEach(function (parroquia) {
                        let opcion = document.createElement('option')
                        opcion.value = parroquia.id
                        opcion.text = parroquia.parroquia
                        subCategoriasSelect.add(opcion);
                    });
            }

        });

    function b64toBlob(b64Data, contentType, sliceSize) {
        contentType = contentType || '';
        sliceSize = sliceSize || 512;

        var byteCharacters = atob(b64Data);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            var slice = byteCharacters.slice(offset, offset + sliceSize);

            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            var byteArray = new Uint8Array(byteNumbers);

            byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }

    var contentType = 'image/png';

    // Cargar Imagen Perfil
    var responseProfile = document.getElementById('responseProfile');
    var b64DataProfile = responseProfile.value;

    var blobProfile = b64toBlob(b64DataProfile, contentType);
    var blobUrlProfile = URL.createObjectURL(blobProfile);

    var previewProfile = document.getElementById('previewProfile');
    previewProfile.src = blobUrlProfile;

</script>